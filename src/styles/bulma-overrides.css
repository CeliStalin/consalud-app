@import './variables.css';

/* Override de Bulma para layout completo */
html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

#root {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  flex: 1;
}

/* Asegurar que el contenido principal tome el espacio disponible */
.main-content {
  flex: 1;
  min-height: calc(100vh - 120px); /* Ajustar según altura del header/footer */
}

/* Override específico para SecureLayout del core */
.secure-layout {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.secure-layout .content-wrapper {
  flex: 1;
  min-height: calc(100vh - 60px - 80px); /* header + footer aproximado */
}

/* Asegurar que el footer esté al final - Sticky Footer Pattern */
.footer,
[class*='footer'],
[class*='Footer'] {
  margin-top: auto !important;
  flex-shrink: 0 !important;
  /* Asegurar que el footer tenga una altura mínima */
  min-height: var(--app-footer-height, 80px) !important;
}

/* Asegurar que el layout principal use flexbox correctamente */
body {
  display: flex !important;
  flex-direction: column !important;
  min-height: 100vh !important;
}

/* Override para containers de páginas */
.content-container {
  min-height: calc(100vh - 200px) !important;
  padding-bottom: 40px !important;
  /* Asegurar que tome el espacio necesario */
  flex: 1 0 auto !important;
}

/* Layout específico para SecureLayout con footer sticky */
.secure-layout,
[class*='SecureLayout'],
[class*='secureLayout'] {
  min-height: 100vh !important;
  display: flex !important;
  flex-direction: column !important;
}

.secure-layout > *:not(.footer):not([class*='footer']):not([class*='Footer']),
[class*='SecureLayout'] > *:not(.footer):not([class*='footer']):not([class*='Footer']),
[class*='secureLayout'] > *:not(.footer):not([class*='footer']):not([class*='Footer']) {
  flex: 1 0 auto;
}

/* Asegurar que el main content area sea flexible */
main,
.main-content,
[role='main'] {
  flex: 1 0 auto !important;
  min-height: var(--app-main-content-min-height, calc(100vh - 140px)) !important;
}

/* Wrapper principal - SIMPLIFICADO para evitar parpadeos */
.app-layout-wrapper,
.page-wrapper {
  width: 100%;
  min-height: 100vh;
  /* CRÍTICO: Sin efectos que causen parpadeo */
  opacity: 1 !important;
  visibility: visible !important;
  background-color: #ffffff;
  position: relative;
}

/* Contenedor principal sin efectos  */
.content-container {
  min-height: calc(100vh - 200px) !important;
  padding-bottom: 40px !important;
  transition: none !important;
  animation: none !important;
  background-color: #ffffff;
  position: relative;
}

/* Específico para páginas de herederos */
.ingreso-herederos-wrapper,
.main-container,
.generalContainer {
  min-height: calc(100vh - 300px);
  animation: none !important;
  transition: none !important;
  opacity: 1 !important;
  visibility: visible !important;
}

/*Asegurar que las animaciones del core no se vean afectadas */
.app-card,
.ingreso-card,
.form-container {
  margin-bottom: 40px !important;
  /*Solo deshabilitar animaciones problemáticas, no todas */
  position: relative;
  /* Mantener aceleración por hardware para animaciones suaves */
  transform: translateZ(0);
  backface-visibility: hidden;
}

/*Soporte específico para el HomePage del core */
.homepage-container,
[class*='homepage'] {
  /* Asegurar que el contenedor del HomePage no interfiera con las animaciones */
  transform: none !important;
  animation: none !important;
}

.homepage-container .app-card:not(.animate-fade-in-up),
[class*='homepage'] .app-card:not(.animate-fade-in-up) {
  animation: unset !important;
  transition:
    transform 0.2s ease,
    box-shadow 0.3s ease !important;
}

.smooth-loading {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 200px;
  animation: none !important;
  transition: none !important;
  background-color: #ffffff;
  opacity: 1 !important;
}

/* Container principal del login */
.login-container,
[class*='login'],
[class*='Login'] {
  min-height: 100vh !important;
  background-color: var(--app-login-bg) !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

/* Card/Formulario del login */
.login-card,
.login-form,
[class*='login'] .card,
[class*='Login'] .card {
  background-color: var(--app-login-card-bg) !important;
  border-radius: var(--app-border-radius) !important;
  box-shadow: var(--app-box-shadow) !important;
  padding: var(--login-card-padding) !important;
  max-width: var(--login-container-max-width) !important;
  width: 100% !important;
}

/* Botones del login */
.login-card .button.is-primary,
.login-form .button.is-primary,
[class*='login'] .button.is-primary,
[class*='Login'] .button.is-primary {
  background-color: var(--app-primary-color) !important;
  border-color: var(--app-primary-color) !important;
  transition: all 0.3s ease !important;
}

.login-card .button.is-primary:hover,
.login-form .button.is-primary:hover,
[class*='login'] .button.is-primary:hover,
[class*='Login'] .button.is-primary:hover {
  background-color: var(--app-secondary-color) !important;
  border-color: var(--app-secondary-color) !important;
  transform: translateY(-1px) !important;
}

/* Inputs del login */
.login-card .input:focus,
.login-card .textarea:focus,
.login-form .input:focus,
.login-form .textarea:focus,
[class*='login'] .input:focus,
[class*='login'] .textarea:focus,
[class*='Login'] .input:focus,
[class*='Login'] .textarea:focus {
  border-color: var(--app-primary-color) !important;
  box-shadow: 0 0 0 0.125em rgba(4, 165, 155, 0.25) !important;
}

/* Override general para botones primarios */
.button.is-primary {
  background-color: var(--app-primary-color);
}

.button.is-primary:hover {
  background-color: var(--app-secondary-color);
}

.card {
  border-radius: var(--app-border-radius);
  box-shadow: var(--app-box-shadow);
}

.notification {
  border-radius: var(--app-border-radius);
}

.input,
.textarea,
.select select {
  border-radius: var(--app-border-radius);
}

/* Personalizar el contenedor en dispositivos móviles */
@media screen and (max-width: 768px) {
  .app-layout-wrapper {
    padding: 0;
  }

  .content-container {
    padding: 10px;
  }
}

/*
  OVERRIDE CRÍTICO PARA BREADCRUMB:
  --------------------------------------------------
  Bulma agrega por defecto un separador visual (/) a los breadcrumbs usando CSS (::before).
  Como el core maneja el separador desde React, eliminamos el de Bulma aquí para evitar duplicidad o conflictos visuales.
  Este override debe estar en la app, NO en el core, para mantener el core desacoplado de frameworks externos.
  Si dejas de usar Bulma, puedes eliminar este bloque.
*/
.breadcrumb li + li:before {
  content: none !important;
}

main.sidebar-expanded {
  margin-left: 240px !important;
  transition: margin-left 0.3s;
}
main.sidebar-collapsed {
  margin-left: 60px !important;
  transition: margin-left 0.3s;
}

/* Eliminar cualquier padding/margin extra en los hijos de <main> y wrappers comunes */
main > * {
  margin-left: 0 !important;
  padding-left: 0 !important;
}
.main-content,
.content-container,
.ingreso-herederos-wrapper,
.main-container,
.generalContainer {
  margin-left: 0 !important;
  padding-left: 0 !important;
}

/*Forzar alineación a la izquierda del contenido principal cuando el menú está colapsado */
main > *,
.main-content,
.content-container,
.route-container,
.layout-stable {
  margin-left: 0 !important;
  padding-left: 0 !important;
  justify-content: flex-start !important;
  text-align: left !important;
}

main.no-margin-left > *,
main.no-margin-left .main-content,
main.no-margin-left .content-container,
main.no-margin-left .route-container,
main.no-margin-left .layout-stable {
  margin-left: 0 !important;
  padding-left: 0 !important;
  justify-content: flex-start !important;
  text-align: left !important;
}
