# Etapa 1: Base
FROM node:20-alpine AS base

RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    && ln -sf python3 /usr/bin/python

# Actualizar npm a la última versión globalmente
RUN npm install -g npm@latest

# Etapa 2: Optimización de dependencias
FROM base AS optimizer
WORKDIR /app
COPY package*.json ./
COPY optimization.config.ts ./
COPY scripts/ ./scripts/
COPY ./consalud-core-1.0.0.tgz ./
COPY .env* ./
RUN node scripts/optimize-deps.js

# Etapa 3: Build de la app (usa TODAS las dependencias)
FROM base AS builder
WORKDIR /app
COPY package*.json ./
COPY ./consalud-core-1.0.0.tgz ./
RUN npm ci --no-audit --no-fund
COPY . .
RUN npm run build

# Etapa 4: Imagen final de producción (Nginx)
FROM nginx:alpine AS production

# Copia el build estático al directorio de Nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# (Opcional) Copia tu archivo de configuración personalizado de Nginx si lo necesitas
# COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"] 