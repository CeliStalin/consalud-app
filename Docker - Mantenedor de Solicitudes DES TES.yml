variables:
  - name: BuildParameters.RestoreBuildProjects
    value: "**/*.csproj"
  - name: BuildParameters.TestProjects
    value: "**/*[Tt]ests/*.csproj"
  - name: Aprobadores
    value: '[Consalud]\CS_Pandora'
  - name: Explotacion
    value: '[Consalud]\CS_Explotacion'
  - name: Docker.Registry.Dev
    value: "azure-Utilitarios-Transversales-PlantillaReact-SolicitudesClientes"
  - name: Docker.Registry.Prod
    value: "RegistryProdCSLD-SolicitudesClientes"
  - name: BuildParameters.AppName
    value: "app-gestor-solicitudes"
name: $(date:yyyyMMdd)$(rev:.r)
stages:
  - stage: SonarQube
    displayName: "SonarQube"
    jobs:
      - job: RunSonarQube
        displayName: Análisis de Código Estático
        pool:
          name: Default
        steps:
          - template: yaml/Template_Sonar.yaml
  - stage: BuildDev
    displayName: "Build Desarrollo"
    jobs:
      - job: Job_1
        displayName: Agent job 1
        pool:
          name: DockerAgents
        variables:
          - group: ReleaseClusterDev
        steps:
          - checkout: self
            clean: False
          - task: Docker@0
            displayName: Build an image (dev)
            inputs:
              containerregistrytype: Container Registry
              dockerRegistryEndpoint: $(Docker.Registry.Dev)
              dockerFile: Dockerfile
              buildArguments: >-
                AMBIENTE=$(ambiente)
              defaultContext: false
              context: .
              tags: |
                $(Build.BuildNumber)
              includeLatestTag: true
              imageName: $(BuildParameters.AppName)
          - task: Docker@0
            displayName: Push an image
            inputs:
              containerregistrytype: Container Registry
              dockerRegistryEndpoint: $(Docker.Registry.Dev)
              azureSubscriptionEndpoint: "Azure Vault-SolicitudesClientes"
              action: Push an image
              includeLatestTag: true
              imageName: $(BuildParameters.AppName)
              tags: |
                $(Build.BuildNumber)
          - task: replacetokens@4
            displayName: Replace tokens
            inputs:
              rootDirectory: yaml/
              targetFiles: >-
                deployment.yaml

                ingress.yaml

                service.yaml
              tokenPattern: azpipelines
              tokenPrefix: ""
              tokenSuffix: ""
              writeBOM: false
              verbosity: detailed
              actionOnMissing: fail
              actionOnNoFiles: fail
          - task: KubectlInstaller@0
            displayName: Instalar Kubectl latest
          - task: KubernetesManifest@0
            displayName: deploy Api
            inputs:
              kubernetesServiceConnection: "rke_des-Utilitarios-Transversales-PlantillaReact-SolicitudesClientes"
              namespace: default
              manifests: yaml/deployment.yaml
          - task: Kubernetes@1
            displayName: kubectl rollout
            inputs:
              kubernetesServiceEndpoint: "rke_des-Utilitarios-Transversales-PlantillaReact-SolicitudesClientes"
              namespace: default
              command: rollout
              arguments: restart deployment app-gestor-solicitudes
          - task: KubernetesManifest@0
            displayName: deploy Servicio
            inputs:
              kubernetesServiceConnection: "rke_des-Utilitarios-Transversales-PlantillaReact-SolicitudesClientes"
              namespace: default
              manifests: yaml/service.yaml
          - task: KubernetesManifest@0
            displayName: deploy Ingress
            inputs:
              kubernetesServiceConnection: "rke_des-Utilitarios-Transversales-PlantillaReact-SolicitudesClientes"
              namespace: default
              manifests: yaml/ingress.yaml
      - job: Aprobacion
        dependsOn: Job_1
        condition: succeeded()
        displayName: Esperando por aprobaciones
        pool: server
        timeoutInMinutes: 4320
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440
            inputs:
              notifyUsers: |
                $(Aprobadores)

                angelo.bernardi@consalud.cl
              instructions: "Su aprobación porfa para DES"
              onTimeout: "resume"
  - stage: BuildTes
    displayName: "Build Testing"
    jobs:
      - job: Job_2
        displayName: Agent job 1
        pool:
          name: DockerAgents
        variables:
          - group: ReleaseClusterTes
        steps:
          - checkout: self
            clean: False
          - task: Docker@0
            displayName: Build an image (dev)
            inputs:
              containerregistrytype: Container Registry
              dockerRegistryEndpoint: $(Docker.Registry.Prod)
              dockerFile: Dockerfile
              buildArguments: >-
                AMBIENTE=$(ambiente)
              defaultContext: false
              context: .
              includeLatestTag: true
          - task: Docker@0
            displayName: Push an image
            inputs:
              containerregistrytype: Container Registry
              dockerRegistryEndpoint: $(Docker.Registry.Prod)
              azureSubscriptionEndpoint: "Azure Vault-SolicitudesClientes"
              action: Push an image
              includeLatestTag: true
          - task: replacetokens@4
            displayName: Replace tokens
            inputs:
              rootDirectory: yaml/
              targetFiles: >-
                deployment.yaml

                ingress.yaml

                service.yaml
              tokenPattern: azpipelines
              tokenPrefix: ""
              tokenSuffix: ""
              writeBOM: false
              verbosity: detailed
              actionOnMissing: fail
              actionOnNoFiles: fail
          - task: KubectlInstaller@0
            displayName: Instalar Kubectl latest
          - task: KubernetesManifest@0
            displayName: deploy Api
            inputs:
              kubernetesServiceConnection: "rke-tes-Utilitarios-Transversales-SolicitudesClientes"
              namespace: default
              manifests: yaml/deployment.yaml
          - task: Kubernetes@1
            displayName: kubectl rollout
            inputs:
              kubernetesServiceEndpoint: "rke-tes-Utilitarios-Transversales-SolicitudesClientes"
              namespace: default
              command: rollout
              arguments: restart deployment app-gestor-solicitudes
          - task: KubernetesManifest@0
            displayName: deploy Servicio
            inputs:
              kubernetesServiceConnection: "rke-tes-Utilitarios-Transversales-SolicitudesClientes"
              namespace: default
              manifests: yaml/service.yaml
          - task: KubernetesManifest@0
            displayName: deploy Ingress
            inputs:
              kubernetesServiceConnection: "rke-tes-Utilitarios-Transversales-SolicitudesClientes"
              namespace: default
              manifests: yaml/ingress.yaml
      - job: Aprobacion
        dependsOn: Job_2
        condition: succeeded()
        displayName: Esperando por aprobaciones
        pool: server
        timeoutInMinutes: 4320
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440
            inputs:
              notifyUsers: |
                $(Aprobadores)

                angelo.bernardi@consalud.cl
              instructions: "Su aprobación porfa para TES"
              onTimeout: "resume"
